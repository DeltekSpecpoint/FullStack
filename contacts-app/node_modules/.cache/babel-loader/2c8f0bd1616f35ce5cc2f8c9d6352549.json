{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"onClick\"];\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport MenuList from '@mui/material/MenuList';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport { gridDensityValueSelector } from '../../hooks/features/density/densitySelector';\nimport { isHideMenuKey, isTabKey } from '../../utils/keyboardUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { GridMenu } from '../menu/GridMenu';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const GridToolbarDensitySelector = /*#__PURE__*/React.forwardRef(function GridToolbarDensitySelector(props, ref) {\n  var _rootProps$slotProps;\n  const {\n      onClick\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const densityValue = useGridSelector(apiRef, gridDensityValueSelector);\n  const densityButtonId = useId();\n  const densityMenuId = useId();\n  const [open, setOpen] = React.useState(false);\n  const buttonRef = React.useRef(null);\n  const handleRef = useForkRef(ref, buttonRef);\n  const densityOptions = [{\n    icon: /*#__PURE__*/_jsx(rootProps.slots.densityCompactIcon, {}),\n    label: apiRef.current.getLocaleText('toolbarDensityCompact'),\n    value: 'compact'\n  }, {\n    icon: /*#__PURE__*/_jsx(rootProps.slots.densityStandardIcon, {}),\n    label: apiRef.current.getLocaleText('toolbarDensityStandard'),\n    value: 'standard'\n  }, {\n    icon: /*#__PURE__*/_jsx(rootProps.slots.densityComfortableIcon, {}),\n    label: apiRef.current.getLocaleText('toolbarDensityComfortable'),\n    value: 'comfortable'\n  }];\n  const startIcon = React.useMemo(() => {\n    switch (densityValue) {\n      case 'compact':\n        return /*#__PURE__*/_jsx(rootProps.slots.densityCompactIcon, {});\n      case 'comfortable':\n        return /*#__PURE__*/_jsx(rootProps.slots.densityComfortableIcon, {});\n      default:\n        return /*#__PURE__*/_jsx(rootProps.slots.densityStandardIcon, {});\n    }\n  }, [densityValue, rootProps]);\n  const handleDensitySelectorOpen = event => {\n    setOpen(prevOpen => !prevOpen);\n    onClick == null ? void 0 : onClick(event);\n  };\n  const handleDensitySelectorClickAway = event => {\n    var _buttonRef$current;\n    if (buttonRef.current === event.target ||\n    // if user clicked on the icon\n    (_buttonRef$current = buttonRef.current) != null && _buttonRef$current.contains(event.target)) {\n      return;\n    }\n    setOpen(false);\n  };\n  const handleDensityUpdate = newDensity => {\n    apiRef.current.setDensity(newDensity);\n    setOpen(false);\n  };\n  const handleListKeyDown = event => {\n    if (isTabKey(event.key)) {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      setOpen(false);\n    }\n  };\n\n  // Disable the button if the corresponding is disabled\n  if (rootProps.disableDensitySelector) {\n    return null;\n  }\n  const densityElements = densityOptions.map((option, index) => /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: () => handleDensityUpdate(option.value),\n    selected: option.value === densityValue,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: option.icon\n    }), option.label]\n  }, index));\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n      ref: handleRef,\n      size: \"small\",\n      startIcon: startIcon,\n      \"aria-label\": apiRef.current.getLocaleText('toolbarDensityLabel'),\n      \"aria-haspopup\": \"menu\",\n      \"aria-expanded\": open,\n      \"aria-controls\": open ? densityMenuId : undefined,\n      id: densityButtonId\n    }, other, {\n      onClick: handleDensitySelectorOpen\n    }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseButton, {\n      children: apiRef.current.getLocaleText('toolbarDensity')\n    })), /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      onClickAway: handleDensitySelectorClickAway,\n      position: \"bottom-start\",\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: densityMenuId,\n        className: gridClasses.menuList,\n        \"aria-labelledby\": densityButtonId,\n        onKeyDown: handleListKeyDown,\n        autoFocusItem: open,\n        children: densityElements\n      })\n    })]\n  });\n});","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","unstable_useId","useId","unstable_useForkRef","useForkRef","MenuList","MenuItem","ListItemIcon","gridDensityValueSelector","isHideMenuKey","isTabKey","useGridApiContext","useGridSelector","GridMenu","useGridRootProps","gridClasses","jsx","_jsx","jsxs","_jsxs","GridToolbarDensitySelector","forwardRef","props","ref","_rootProps$slotProps","onClick","other","apiRef","rootProps","densityValue","densityButtonId","densityMenuId","open","setOpen","useState","buttonRef","useRef","handleRef","densityOptions","icon","slots","densityCompactIcon","label","current","getLocaleText","value","densityStandardIcon","densityComfortableIcon","startIcon","useMemo","handleDensitySelectorOpen","event","prevOpen","handleDensitySelectorClickAway","_buttonRef$current","target","contains","handleDensityUpdate","newDensity","setDensity","handleListKeyDown","key","preventDefault","disableDensitySelector","densityElements","map","option","index","selected","children","Fragment","baseButton","size","undefined","id","slotProps","onClickAway","position","className","menuList","onKeyDown","autoFocusItem"],"sources":["C:/Users/Armi/source/repos/FullStack/contacts-app/node_modules/@mui/x-data-grid/components/toolbar/GridToolbarDensitySelector.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"onClick\"];\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport MenuList from '@mui/material/MenuList';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport { gridDensityValueSelector } from '../../hooks/features/density/densitySelector';\nimport { isHideMenuKey, isTabKey } from '../../utils/keyboardUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { GridMenu } from '../menu/GridMenu';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const GridToolbarDensitySelector = /*#__PURE__*/React.forwardRef(function GridToolbarDensitySelector(props, ref) {\n  var _rootProps$slotProps;\n  const {\n      onClick\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const densityValue = useGridSelector(apiRef, gridDensityValueSelector);\n  const densityButtonId = useId();\n  const densityMenuId = useId();\n  const [open, setOpen] = React.useState(false);\n  const buttonRef = React.useRef(null);\n  const handleRef = useForkRef(ref, buttonRef);\n  const densityOptions = [{\n    icon: /*#__PURE__*/_jsx(rootProps.slots.densityCompactIcon, {}),\n    label: apiRef.current.getLocaleText('toolbarDensityCompact'),\n    value: 'compact'\n  }, {\n    icon: /*#__PURE__*/_jsx(rootProps.slots.densityStandardIcon, {}),\n    label: apiRef.current.getLocaleText('toolbarDensityStandard'),\n    value: 'standard'\n  }, {\n    icon: /*#__PURE__*/_jsx(rootProps.slots.densityComfortableIcon, {}),\n    label: apiRef.current.getLocaleText('toolbarDensityComfortable'),\n    value: 'comfortable'\n  }];\n  const startIcon = React.useMemo(() => {\n    switch (densityValue) {\n      case 'compact':\n        return /*#__PURE__*/_jsx(rootProps.slots.densityCompactIcon, {});\n      case 'comfortable':\n        return /*#__PURE__*/_jsx(rootProps.slots.densityComfortableIcon, {});\n      default:\n        return /*#__PURE__*/_jsx(rootProps.slots.densityStandardIcon, {});\n    }\n  }, [densityValue, rootProps]);\n  const handleDensitySelectorOpen = event => {\n    setOpen(prevOpen => !prevOpen);\n    onClick == null ? void 0 : onClick(event);\n  };\n  const handleDensitySelectorClickAway = event => {\n    var _buttonRef$current;\n    if (buttonRef.current === event.target || // if user clicked on the icon\n    (_buttonRef$current = buttonRef.current) != null && _buttonRef$current.contains(event.target)) {\n      return;\n    }\n    setOpen(false);\n  };\n  const handleDensityUpdate = newDensity => {\n    apiRef.current.setDensity(newDensity);\n    setOpen(false);\n  };\n  const handleListKeyDown = event => {\n    if (isTabKey(event.key)) {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      setOpen(false);\n    }\n  };\n\n  // Disable the button if the corresponding is disabled\n  if (rootProps.disableDensitySelector) {\n    return null;\n  }\n  const densityElements = densityOptions.map((option, index) => /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: () => handleDensityUpdate(option.value),\n    selected: option.value === densityValue,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: option.icon\n    }), option.label]\n  }, index));\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n      ref: handleRef,\n      size: \"small\",\n      startIcon: startIcon,\n      \"aria-label\": apiRef.current.getLocaleText('toolbarDensityLabel'),\n      \"aria-haspopup\": \"menu\",\n      \"aria-expanded\": open,\n      \"aria-controls\": open ? densityMenuId : undefined,\n      id: densityButtonId\n    }, other, {\n      onClick: handleDensitySelectorOpen\n    }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseButton, {\n      children: apiRef.current.getLocaleText('toolbarDensity')\n    })), /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      onClickAway: handleDensitySelectorClickAway,\n      position: \"bottom-start\",\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: densityMenuId,\n        className: gridClasses.menuList,\n        \"aria-labelledby\": densityButtonId,\n        onKeyDown: handleListKeyDown,\n        autoFocusItem: open,\n        children: densityElements\n      })\n    })]\n  });\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}