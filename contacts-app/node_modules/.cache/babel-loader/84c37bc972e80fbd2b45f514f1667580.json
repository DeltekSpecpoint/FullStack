{"ast":null,"code":"import { createSelector as reselectCreateSelector } from 'reselect';\nimport { buildWarning } from './warning';\nconst cacheContainer = {\n  cache: new WeakMap()\n};\nconst missingInstanceIdWarning = buildWarning(['MUI: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, e.g. `mySelector(apiRef)`, or pass the instance ID explicitly, e.g `mySelector(state, apiRef.current.instanceId)`.']);\nfunction checkIsAPIRef(value) {\n  return 'current' in value && 'instanceId' in value.current;\n}\nconst DEFAULT_INSTANCE_ID = {\n  id: 'default'\n};\nexport const createSelector = function (a, b, c, d, e, f) {\n  if ((arguments.length <= 6 ? 0 : arguments.length - 6) > 0) {\n    throw new Error('Unsupported number of selectors');\n  }\n  let selector;\n  if (a && b && c && d && e && f) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam != null ? instanceIdParam : isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID;\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      const ve = e(state, instanceId);\n      return f(va, vb, vc, vd, ve);\n    };\n  } else if (a && b && c && d && e) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam != null ? instanceIdParam : isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID;\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      return e(va, vb, vc, vd);\n    };\n  } else if (a && b && c && d) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam != null ? instanceIdParam : isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID;\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      return d(va, vb, vc);\n    };\n  } else if (a && b && c) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam != null ? instanceIdParam : isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID;\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      return c(va, vb);\n    };\n  } else if (a && b) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam != null ? instanceIdParam : isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID;\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      return b(va);\n    };\n  } else {\n    throw new Error('Missing arguments');\n  }\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\nexport const createSelectorMemoized = function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  const selector = function () {\n    var _cache$get, _cache$get3;\n    for (var _len2 = arguments.length, selectorArgs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      selectorArgs[_key2] = arguments[_key2];\n    }\n    const [stateOrApiRef, instanceId] = selectorArgs;\n    const isAPIRef = checkIsAPIRef(stateOrApiRef);\n    const cacheKey = isAPIRef ? stateOrApiRef.current.instanceId : instanceId != null ? instanceId : DEFAULT_INSTANCE_ID;\n    const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey.id === 'default') {\n        missingInstanceIdWarning();\n      }\n    }\n    const {\n      cache\n    } = cacheContainer;\n    if (cache.get(cacheKey) && (_cache$get = cache.get(cacheKey)) != null && _cache$get.get(args)) {\n      var _cache$get2;\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return (_cache$get2 = cache.get(cacheKey)) == null ? void 0 : _cache$get2.get(args)(state, cacheKey);\n    }\n    const newSelector = reselectCreateSelector(...args);\n    if (!cache.get(cacheKey)) {\n      cache.set(cacheKey, new Map());\n    }\n    (_cache$get3 = cache.get(cacheKey)) == null ? void 0 : _cache$get3.set(args, newSelector);\n    return newSelector(state, cacheKey);\n  };\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_resetCreateSelectorCache = () => {\n  cacheContainer.cache = new WeakMap();\n};","map":{"version":3,"names":["createSelector","reselectCreateSelector","buildWarning","cacheContainer","cache","WeakMap","missingInstanceIdWarning","checkIsAPIRef","value","current","DEFAULT_INSTANCE_ID","id","a","b","c","d","e","f","Error","selector","stateOrApiRef","instanceIdParam","isAPIRef","instanceId","state","va","vb","vc","vd","ve","acceptsApiRef","createSelectorMemoized","args","_cache$get","_cache$get3","selectorArgs","cacheKey","process","env","NODE_ENV","get","_cache$get2","newSelector","set","Map","unstable_resetCreateSelectorCache"],"sources":["C:/Users/Armi/source/repos/FullStack/contacts-app/node_modules/@mui/x-data-grid/utils/createSelector.js"],"sourcesContent":["import { createSelector as reselectCreateSelector } from 'reselect';\nimport { buildWarning } from './warning';\nconst cacheContainer = {\n  cache: new WeakMap()\n};\nconst missingInstanceIdWarning = buildWarning(['MUI: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, e.g. `mySelector(apiRef)`, or pass the instance ID explicitly, e.g `mySelector(state, apiRef.current.instanceId)`.']);\nfunction checkIsAPIRef(value) {\n  return 'current' in value && 'instanceId' in value.current;\n}\nconst DEFAULT_INSTANCE_ID = {\n  id: 'default'\n};\nexport const createSelector = (a, b, c, d, e, f, ...rest) => {\n  if (rest.length > 0) {\n    throw new Error('Unsupported number of selectors');\n  }\n  let selector;\n  if (a && b && c && d && e && f) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam != null ? instanceIdParam : isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID;\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      const ve = e(state, instanceId);\n      return f(va, vb, vc, vd, ve);\n    };\n  } else if (a && b && c && d && e) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam != null ? instanceIdParam : isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID;\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      return e(va, vb, vc, vd);\n    };\n  } else if (a && b && c && d) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam != null ? instanceIdParam : isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID;\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      return d(va, vb, vc);\n    };\n  } else if (a && b && c) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam != null ? instanceIdParam : isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID;\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      return c(va, vb);\n    };\n  } else if (a && b) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam != null ? instanceIdParam : isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID;\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      return b(va);\n    };\n  } else {\n    throw new Error('Missing arguments');\n  }\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\nexport const createSelectorMemoized = (...args) => {\n  const selector = (...selectorArgs) => {\n    var _cache$get, _cache$get3;\n    const [stateOrApiRef, instanceId] = selectorArgs;\n    const isAPIRef = checkIsAPIRef(stateOrApiRef);\n    const cacheKey = isAPIRef ? stateOrApiRef.current.instanceId : instanceId != null ? instanceId : DEFAULT_INSTANCE_ID;\n    const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey.id === 'default') {\n        missingInstanceIdWarning();\n      }\n    }\n    const {\n      cache\n    } = cacheContainer;\n    if (cache.get(cacheKey) && (_cache$get = cache.get(cacheKey)) != null && _cache$get.get(args)) {\n      var _cache$get2;\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return (_cache$get2 = cache.get(cacheKey)) == null ? void 0 : _cache$get2.get(args)(state, cacheKey);\n    }\n    const newSelector = reselectCreateSelector(...args);\n    if (!cache.get(cacheKey)) {\n      cache.set(cacheKey, new Map());\n    }\n    (_cache$get3 = cache.get(cacheKey)) == null ? void 0 : _cache$get3.set(args, newSelector);\n    return newSelector(state, cacheKey);\n  };\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_resetCreateSelectorCache = () => {\n  cacheContainer.cache = new WeakMap();\n};"],"mappings":"AAAA,SAASA,cAAc,IAAIC,sBAAsB,QAAQ,UAAU;AACnE,SAASC,YAAY,QAAQ,WAAW;AACxC,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,IAAIC,OAAO;AACpB,CAAC;AACD,MAAMC,wBAAwB,GAAGJ,YAAY,CAAC,CAAC,2GAA2G,EAAE,mJAAmJ,CAAC,CAAC;AACjT,SAASK,aAAa,CAACC,KAAK,EAAE;EAC5B,OAAO,SAAS,IAAIA,KAAK,IAAI,YAAY,IAAIA,KAAK,CAACC,OAAO;AAC5D;AACA,MAAMC,mBAAmB,GAAG;EAC1BC,EAAE,EAAE;AACN,CAAC;AACD,OAAO,MAAMX,cAAc,GAAG,UAACY,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAc;EAC3D,IAAI,qDAAc,CAAC,EAAE;IACnB,MAAM,IAAIC,KAAK,CAAC,iCAAiC,CAAC;EACpD;EACA,IAAIC,QAAQ;EACZ,IAAIP,CAAC,IAAIC,CAAC,IAAIC,CAAC,IAAIC,CAAC,IAAIC,CAAC,IAAIC,CAAC,EAAE;IAC9BE,QAAQ,GAAG,CAACC,aAAa,EAAEC,eAAe,KAAK;MAC7C,MAAMC,QAAQ,GAAGf,aAAa,CAACa,aAAa,CAAC;MAC7C,MAAMG,UAAU,GAAGF,eAAe,IAAI,IAAI,GAAGA,eAAe,GAAGC,QAAQ,GAAGF,aAAa,CAACX,OAAO,CAACc,UAAU,GAAGb,mBAAmB;MAChI,MAAMc,KAAK,GAAGF,QAAQ,GAAGF,aAAa,CAACX,OAAO,CAACe,KAAK,GAAGJ,aAAa;MACpE,MAAMK,EAAE,GAAGb,CAAC,CAACY,KAAK,EAAED,UAAU,CAAC;MAC/B,MAAMG,EAAE,GAAGb,CAAC,CAACW,KAAK,EAAED,UAAU,CAAC;MAC/B,MAAMI,EAAE,GAAGb,CAAC,CAACU,KAAK,EAAED,UAAU,CAAC;MAC/B,MAAMK,EAAE,GAAGb,CAAC,CAACS,KAAK,EAAED,UAAU,CAAC;MAC/B,MAAMM,EAAE,GAAGb,CAAC,CAACQ,KAAK,EAAED,UAAU,CAAC;MAC/B,OAAON,CAAC,CAACQ,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC;IAC9B,CAAC;EACH,CAAC,MAAM,IAAIjB,CAAC,IAAIC,CAAC,IAAIC,CAAC,IAAIC,CAAC,IAAIC,CAAC,EAAE;IAChCG,QAAQ,GAAG,CAACC,aAAa,EAAEC,eAAe,KAAK;MAC7C,MAAMC,QAAQ,GAAGf,aAAa,CAACa,aAAa,CAAC;MAC7C,MAAMG,UAAU,GAAGF,eAAe,IAAI,IAAI,GAAGA,eAAe,GAAGC,QAAQ,GAAGF,aAAa,CAACX,OAAO,CAACc,UAAU,GAAGb,mBAAmB;MAChI,MAAMc,KAAK,GAAGF,QAAQ,GAAGF,aAAa,CAACX,OAAO,CAACe,KAAK,GAAGJ,aAAa;MACpE,MAAMK,EAAE,GAAGb,CAAC,CAACY,KAAK,EAAED,UAAU,CAAC;MAC/B,MAAMG,EAAE,GAAGb,CAAC,CAACW,KAAK,EAAED,UAAU,CAAC;MAC/B,MAAMI,EAAE,GAAGb,CAAC,CAACU,KAAK,EAAED,UAAU,CAAC;MAC/B,MAAMK,EAAE,GAAGb,CAAC,CAACS,KAAK,EAAED,UAAU,CAAC;MAC/B,OAAOP,CAAC,CAACS,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC;IAC1B,CAAC;EACH,CAAC,MAAM,IAAIhB,CAAC,IAAIC,CAAC,IAAIC,CAAC,IAAIC,CAAC,EAAE;IAC3BI,QAAQ,GAAG,CAACC,aAAa,EAAEC,eAAe,KAAK;MAC7C,MAAMC,QAAQ,GAAGf,aAAa,CAACa,aAAa,CAAC;MAC7C,MAAMG,UAAU,GAAGF,eAAe,IAAI,IAAI,GAAGA,eAAe,GAAGC,QAAQ,GAAGF,aAAa,CAACX,OAAO,CAACc,UAAU,GAAGb,mBAAmB;MAChI,MAAMc,KAAK,GAAGF,QAAQ,GAAGF,aAAa,CAACX,OAAO,CAACe,KAAK,GAAGJ,aAAa;MACpE,MAAMK,EAAE,GAAGb,CAAC,CAACY,KAAK,EAAED,UAAU,CAAC;MAC/B,MAAMG,EAAE,GAAGb,CAAC,CAACW,KAAK,EAAED,UAAU,CAAC;MAC/B,MAAMI,EAAE,GAAGb,CAAC,CAACU,KAAK,EAAED,UAAU,CAAC;MAC/B,OAAOR,CAAC,CAACU,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC;IACtB,CAAC;EACH,CAAC,MAAM,IAAIf,CAAC,IAAIC,CAAC,IAAIC,CAAC,EAAE;IACtBK,QAAQ,GAAG,CAACC,aAAa,EAAEC,eAAe,KAAK;MAC7C,MAAMC,QAAQ,GAAGf,aAAa,CAACa,aAAa,CAAC;MAC7C,MAAMG,UAAU,GAAGF,eAAe,IAAI,IAAI,GAAGA,eAAe,GAAGC,QAAQ,GAAGF,aAAa,CAACX,OAAO,CAACc,UAAU,GAAGb,mBAAmB;MAChI,MAAMc,KAAK,GAAGF,QAAQ,GAAGF,aAAa,CAACX,OAAO,CAACe,KAAK,GAAGJ,aAAa;MACpE,MAAMK,EAAE,GAAGb,CAAC,CAACY,KAAK,EAAED,UAAU,CAAC;MAC/B,MAAMG,EAAE,GAAGb,CAAC,CAACW,KAAK,EAAED,UAAU,CAAC;MAC/B,OAAOT,CAAC,CAACW,EAAE,EAAEC,EAAE,CAAC;IAClB,CAAC;EACH,CAAC,MAAM,IAAId,CAAC,IAAIC,CAAC,EAAE;IACjBM,QAAQ,GAAG,CAACC,aAAa,EAAEC,eAAe,KAAK;MAC7C,MAAMC,QAAQ,GAAGf,aAAa,CAACa,aAAa,CAAC;MAC7C,MAAMG,UAAU,GAAGF,eAAe,IAAI,IAAI,GAAGA,eAAe,GAAGC,QAAQ,GAAGF,aAAa,CAACX,OAAO,CAACc,UAAU,GAAGb,mBAAmB;MAChI,MAAMc,KAAK,GAAGF,QAAQ,GAAGF,aAAa,CAACX,OAAO,CAACe,KAAK,GAAGJ,aAAa;MACpE,MAAMK,EAAE,GAAGb,CAAC,CAACY,KAAK,EAAED,UAAU,CAAC;MAC/B,OAAOV,CAAC,CAACY,EAAE,CAAC;IACd,CAAC;EACH,CAAC,MAAM;IACL,MAAM,IAAIP,KAAK,CAAC,mBAAmB,CAAC;EACtC;;EAEA;EACA;EACAC,QAAQ,CAACW,aAAa,GAAG,IAAI;EAC7B,OAAOX,QAAQ;AACjB,CAAC;AACD,OAAO,MAAMY,sBAAsB,GAAG,YAAa;EAAA,kCAATC,IAAI;IAAJA,IAAI;EAAA;EAC5C,MAAMb,QAAQ,GAAG,YAAqB;IACpC,IAAIc,UAAU,EAAEC,WAAW;IAAC,mCADTC,YAAY;MAAZA,YAAY;IAAA;IAE/B,MAAM,CAACf,aAAa,EAAEG,UAAU,CAAC,GAAGY,YAAY;IAChD,MAAMb,QAAQ,GAAGf,aAAa,CAACa,aAAa,CAAC;IAC7C,MAAMgB,QAAQ,GAAGd,QAAQ,GAAGF,aAAa,CAACX,OAAO,CAACc,UAAU,GAAGA,UAAU,IAAI,IAAI,GAAGA,UAAU,GAAGb,mBAAmB;IACpH,MAAMc,KAAK,GAAGF,QAAQ,GAAGF,aAAa,CAACX,OAAO,CAACe,KAAK,GAAGJ,aAAa;IACpE,IAAIiB,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACzC,IAAIH,QAAQ,CAACzB,EAAE,KAAK,SAAS,EAAE;QAC7BL,wBAAwB,EAAE;MAC5B;IACF;IACA,MAAM;MACJF;IACF,CAAC,GAAGD,cAAc;IAClB,IAAIC,KAAK,CAACoC,GAAG,CAACJ,QAAQ,CAAC,IAAI,CAACH,UAAU,GAAG7B,KAAK,CAACoC,GAAG,CAACJ,QAAQ,CAAC,KAAK,IAAI,IAAIH,UAAU,CAACO,GAAG,CAACR,IAAI,CAAC,EAAE;MAC7F,IAAIS,WAAW;MACf;MACA;MACA,OAAO,CAACA,WAAW,GAAGrC,KAAK,CAACoC,GAAG,CAACJ,QAAQ,CAAC,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGK,WAAW,CAACD,GAAG,CAACR,IAAI,CAAC,CAACR,KAAK,EAAEY,QAAQ,CAAC;IACtG;IACA,MAAMM,WAAW,GAAGzC,sBAAsB,CAAC,GAAG+B,IAAI,CAAC;IACnD,IAAI,CAAC5B,KAAK,CAACoC,GAAG,CAACJ,QAAQ,CAAC,EAAE;MACxBhC,KAAK,CAACuC,GAAG,CAACP,QAAQ,EAAE,IAAIQ,GAAG,EAAE,CAAC;IAChC;IACA,CAACV,WAAW,GAAG9B,KAAK,CAACoC,GAAG,CAACJ,QAAQ,CAAC,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGF,WAAW,CAACS,GAAG,CAACX,IAAI,EAAEU,WAAW,CAAC;IACzF,OAAOA,WAAW,CAAClB,KAAK,EAAEY,QAAQ,CAAC;EACrC,CAAC;;EAED;EACA;EACAjB,QAAQ,CAACW,aAAa,GAAG,IAAI;EAC7B,OAAOX,QAAQ;AACjB,CAAC;;AAED;AACA,OAAO,MAAM0B,iCAAiC,GAAG,MAAM;EACrD1C,cAAc,CAACC,KAAK,GAAG,IAAIC,OAAO,EAAE;AACtC,CAAC"},"metadata":{},"sourceType":"module"}