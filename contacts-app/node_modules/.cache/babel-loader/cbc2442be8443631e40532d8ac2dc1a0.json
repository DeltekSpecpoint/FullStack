{"ast":null,"code":"import { buildWarning } from '../../../utils/warning';\nimport { GridSignature } from '../../utils';\nconst MAX_PAGE_SIZE = 100;\nexport const defaultPageSize = autoPageSize => autoPageSize ? 0 : 100;\nexport const getPageCount = (rowCount, pageSize) => {\n  if (pageSize > 0 && rowCount > 0) {\n    return Math.ceil(rowCount / pageSize);\n  }\n  return 0;\n};\nexport const noRowCountInServerMode = buildWarning([\"MUI: the 'rowCount' prop is undefined while using paginationMode='server'\", 'For more detail, see http://mui.com/components/data-grid/pagination/#basic-implementation'], 'error');\nexport const getDefaultGridPaginationModel = autoPageSize => ({\n  page: 0,\n  pageSize: autoPageSize ? 0 : 100\n});\nexport const getValidPage = function (page) {\n  let pageCount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  if (pageCount === 0) {\n    return page;\n  }\n  return Math.max(Math.min(page, pageCount - 1), 0);\n};\nexport const throwIfPageSizeExceedsTheLimit = (pageSize, signatureProp) => {\n  if (signatureProp === GridSignature.DataGrid && pageSize > MAX_PAGE_SIZE) {\n    throw new Error(['MUI: `pageSize` cannot exceed 100 in the MIT version of the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n  }\n};","map":{"version":3,"names":["buildWarning","GridSignature","MAX_PAGE_SIZE","defaultPageSize","autoPageSize","getPageCount","rowCount","pageSize","Math","ceil","noRowCountInServerMode","getDefaultGridPaginationModel","page","getValidPage","pageCount","max","min","throwIfPageSizeExceedsTheLimit","signatureProp","DataGrid","Error","join"],"sources":["C:/Users/Armi/source/repos/FullStack/contacts-app/node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationUtils.js"],"sourcesContent":["import { buildWarning } from '../../../utils/warning';\nimport { GridSignature } from '../../utils';\nconst MAX_PAGE_SIZE = 100;\nexport const defaultPageSize = autoPageSize => autoPageSize ? 0 : 100;\nexport const getPageCount = (rowCount, pageSize) => {\n  if (pageSize > 0 && rowCount > 0) {\n    return Math.ceil(rowCount / pageSize);\n  }\n  return 0;\n};\nexport const noRowCountInServerMode = buildWarning([\"MUI: the 'rowCount' prop is undefined while using paginationMode='server'\", 'For more detail, see http://mui.com/components/data-grid/pagination/#basic-implementation'], 'error');\nexport const getDefaultGridPaginationModel = autoPageSize => ({\n  page: 0,\n  pageSize: autoPageSize ? 0 : 100\n});\nexport const getValidPage = (page, pageCount = 0) => {\n  if (pageCount === 0) {\n    return page;\n  }\n  return Math.max(Math.min(page, pageCount - 1), 0);\n};\nexport const throwIfPageSizeExceedsTheLimit = (pageSize, signatureProp) => {\n  if (signatureProp === GridSignature.DataGrid && pageSize > MAX_PAGE_SIZE) {\n    throw new Error(['MUI: `pageSize` cannot exceed 100 in the MIT version of the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n  }\n};"],"mappings":"AAAA,SAASA,YAAY,QAAQ,wBAAwB;AACrD,SAASC,aAAa,QAAQ,aAAa;AAC3C,MAAMC,aAAa,GAAG,GAAG;AACzB,OAAO,MAAMC,eAAe,GAAGC,YAAY,IAAIA,YAAY,GAAG,CAAC,GAAG,GAAG;AACrE,OAAO,MAAMC,YAAY,GAAG,CAACC,QAAQ,EAAEC,QAAQ,KAAK;EAClD,IAAIA,QAAQ,GAAG,CAAC,IAAID,QAAQ,GAAG,CAAC,EAAE;IAChC,OAAOE,IAAI,CAACC,IAAI,CAACH,QAAQ,GAAGC,QAAQ,CAAC;EACvC;EACA,OAAO,CAAC;AACV,CAAC;AACD,OAAO,MAAMG,sBAAsB,GAAGV,YAAY,CAAC,CAAC,2EAA2E,EAAE,2FAA2F,CAAC,EAAE,OAAO,CAAC;AACvO,OAAO,MAAMW,6BAA6B,GAAGP,YAAY,KAAK;EAC5DQ,IAAI,EAAE,CAAC;EACPL,QAAQ,EAAEH,YAAY,GAAG,CAAC,GAAG;AAC/B,CAAC,CAAC;AACF,OAAO,MAAMS,YAAY,GAAG,UAACD,IAAI,EAAoB;EAAA,IAAlBE,SAAS,uEAAG,CAAC;EAC9C,IAAIA,SAAS,KAAK,CAAC,EAAE;IACnB,OAAOF,IAAI;EACb;EACA,OAAOJ,IAAI,CAACO,GAAG,CAACP,IAAI,CAACQ,GAAG,CAACJ,IAAI,EAAEE,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AACnD,CAAC;AACD,OAAO,MAAMG,8BAA8B,GAAG,CAACV,QAAQ,EAAEW,aAAa,KAAK;EACzE,IAAIA,aAAa,KAAKjB,aAAa,CAACkB,QAAQ,IAAIZ,QAAQ,GAAGL,aAAa,EAAE;IACxE,MAAM,IAAIkB,KAAK,CAAC,CAAC,uEAAuE,EAAE,yFAAyF,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EAClM;AACF,CAAC"},"metadata":{},"sourceType":"module"}