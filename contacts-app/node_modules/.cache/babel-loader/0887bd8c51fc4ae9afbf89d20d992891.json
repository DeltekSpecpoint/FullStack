{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport TablePagination, { tablePaginationClasses } from '@mui/material/TablePagination';\nimport { styled } from '@mui/material/styles';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridFilteredTopLevelRowCountSelector } from '../hooks/features/filter';\nimport { gridPaginationModelSelector } from '../hooks/features/pagination/gridPaginationSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridPaginationRoot = styled(TablePagination)(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    [`& .${tablePaginationClasses.selectLabel}`]: {\n      display: 'none',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block'\n      }\n    },\n    [`& .${tablePaginationClasses.input}`]: {\n      display: 'none',\n      [theme.breakpoints.up('sm')]: {\n        display: 'inline-flex'\n      }\n    }\n  };\n});\nexport const GridPagination = /*#__PURE__*/React.forwardRef(function GridPagination(props, ref) {\n  var _rootProps$pageSizeOp;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const rowCount = React.useMemo(() => {\n    var _ref, _rootProps$rowCount;\n    return (_ref = (_rootProps$rowCount = rootProps.rowCount) != null ? _rootProps$rowCount : visibleTopLevelRowCount) != null ? _ref : 0;\n  }, [rootProps.rowCount, visibleTopLevelRowCount]);\n  const lastPage = React.useMemo(() => Math.floor(rowCount / (paginationModel.pageSize || 1)), [rowCount, paginationModel.pageSize]);\n  const handlePageSizeChange = React.useCallback(event => {\n    const pageSize = Number(event.target.value);\n    apiRef.current.setPageSize(pageSize);\n  }, [apiRef]);\n  const handlePageChange = React.useCallback((_, page) => {\n    apiRef.current.setPage(page);\n  }, [apiRef]);\n  if (process.env.NODE_ENV !== 'production') {\n    var _rootProps$pagination, _rootProps$pagination2;\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const warnedOnceMissingInPageSizeOptions = React.useRef(false);\n    const pageSize = (_rootProps$pagination = (_rootProps$pagination2 = rootProps.paginationModel) == null ? void 0 : _rootProps$pagination2.pageSize) != null ? _rootProps$pagination : paginationModel.pageSize;\n    if (!warnedOnceMissingInPageSizeOptions.current && !rootProps.autoPageSize && !rootProps.pageSizeOptions.includes(pageSize)) {\n      console.warn([`MUI: The page size \\`${paginationModel.pageSize}\\` is not preset in the \\`pageSizeOptions\\``, `Add it to show the pagination select.`].join('\\n'));\n      warnedOnceMissingInPageSizeOptions.current = true;\n    }\n  }\n  return /*#__PURE__*/_jsx(GridPaginationRoot, _extends({\n    ref: ref,\n    component: \"div\",\n    count: rowCount,\n    page: paginationModel.page <= lastPage ? paginationModel.page : lastPage,\n    rowsPerPageOptions: (_rootProps$pageSizeOp = rootProps.pageSizeOptions) != null && _rootProps$pageSizeOp.includes(paginationModel.pageSize) ? rootProps.pageSizeOptions : [],\n    rowsPerPage: paginationModel.pageSize,\n    onPageChange: handlePageChange,\n    onRowsPerPageChange: handlePageSizeChange\n  }, apiRef.current.getLocaleText('MuiTablePagination'), props));\n});","map":{"version":3,"names":["_extends","React","TablePagination","tablePaginationClasses","styled","useGridSelector","useGridApiContext","useGridRootProps","gridFilteredTopLevelRowCountSelector","gridPaginationModelSelector","jsx","_jsx","GridPaginationRoot","theme","selectLabel","display","breakpoints","up","input","GridPagination","forwardRef","props","ref","_rootProps$pageSizeOp","apiRef","rootProps","paginationModel","visibleTopLevelRowCount","rowCount","useMemo","_ref","_rootProps$rowCount","lastPage","Math","floor","pageSize","handlePageSizeChange","useCallback","event","Number","target","value","current","setPageSize","handlePageChange","_","page","setPage","process","env","NODE_ENV","_rootProps$pagination","_rootProps$pagination2","warnedOnceMissingInPageSizeOptions","useRef","autoPageSize","pageSizeOptions","includes","console","warn","join","component","count","rowsPerPageOptions","rowsPerPage","onPageChange","onRowsPerPageChange","getLocaleText"],"sources":["C:/Users/Armi/source/repos/FullStack/contacts-app/node_modules/@mui/x-data-grid/components/GridPagination.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport TablePagination, { tablePaginationClasses } from '@mui/material/TablePagination';\nimport { styled } from '@mui/material/styles';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridFilteredTopLevelRowCountSelector } from '../hooks/features/filter';\nimport { gridPaginationModelSelector } from '../hooks/features/pagination/gridPaginationSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridPaginationRoot = styled(TablePagination)(({\n  theme\n}) => ({\n  [`& .${tablePaginationClasses.selectLabel}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  [`& .${tablePaginationClasses.input}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline-flex'\n    }\n  }\n}));\nexport const GridPagination = /*#__PURE__*/React.forwardRef(function GridPagination(props, ref) {\n  var _rootProps$pageSizeOp;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const rowCount = React.useMemo(() => {\n    var _ref, _rootProps$rowCount;\n    return (_ref = (_rootProps$rowCount = rootProps.rowCount) != null ? _rootProps$rowCount : visibleTopLevelRowCount) != null ? _ref : 0;\n  }, [rootProps.rowCount, visibleTopLevelRowCount]);\n  const lastPage = React.useMemo(() => Math.floor(rowCount / (paginationModel.pageSize || 1)), [rowCount, paginationModel.pageSize]);\n  const handlePageSizeChange = React.useCallback(event => {\n    const pageSize = Number(event.target.value);\n    apiRef.current.setPageSize(pageSize);\n  }, [apiRef]);\n  const handlePageChange = React.useCallback((_, page) => {\n    apiRef.current.setPage(page);\n  }, [apiRef]);\n  if (process.env.NODE_ENV !== 'production') {\n    var _rootProps$pagination, _rootProps$pagination2;\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const warnedOnceMissingInPageSizeOptions = React.useRef(false);\n    const pageSize = (_rootProps$pagination = (_rootProps$pagination2 = rootProps.paginationModel) == null ? void 0 : _rootProps$pagination2.pageSize) != null ? _rootProps$pagination : paginationModel.pageSize;\n    if (!warnedOnceMissingInPageSizeOptions.current && !rootProps.autoPageSize && !rootProps.pageSizeOptions.includes(pageSize)) {\n      console.warn([`MUI: The page size \\`${paginationModel.pageSize}\\` is not preset in the \\`pageSizeOptions\\``, `Add it to show the pagination select.`].join('\\n'));\n      warnedOnceMissingInPageSizeOptions.current = true;\n    }\n  }\n  return /*#__PURE__*/_jsx(GridPaginationRoot, _extends({\n    ref: ref,\n    component: \"div\",\n    count: rowCount,\n    page: paginationModel.page <= lastPage ? paginationModel.page : lastPage,\n    rowsPerPageOptions: (_rootProps$pageSizeOp = rootProps.pageSizeOptions) != null && _rootProps$pageSizeOp.includes(paginationModel.pageSize) ? rootProps.pageSizeOptions : [],\n    rowsPerPage: paginationModel.pageSize,\n    onPageChange: handlePageChange,\n    onRowsPerPageChange: handlePageSizeChange\n  }, apiRef.current.getLocaleText('MuiTablePagination'), props));\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}