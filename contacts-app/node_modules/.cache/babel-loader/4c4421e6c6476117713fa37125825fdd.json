{"ast":null,"code":"import { gridClasses } from '../constants/gridClasses';\nexport function isOverflown(element) {\n  return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\n}\nexport function findParentElementFromClassName(elem, className) {\n  return elem.closest(`.${className}`);\n}\nexport function getRowEl(cell) {\n  if (!cell) {\n    return null;\n  }\n  return findParentElementFromClassName(cell, gridClasses.row);\n}\n\n// TODO remove\nexport function isGridCellRoot(elem) {\n  return elem != null && elem.classList.contains(gridClasses.cell);\n}\nexport function isGridHeaderCellRoot(elem) {\n  return elem != null && elem.classList.contains(gridClasses.columnHeader);\n}\nfunction escapeOperandAttributeSelector(operand) {\n  return operand.replace(/[\"\\\\]/g, '\\\\$&');\n}\nexport function getGridColumnHeaderElement(root, field) {\n  return root.querySelector(`[role=\"columnheader\"][data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nfunction getGridRowElementSelector(id) {\n  return `.${gridClasses.row}[data-id=\"${escapeOperandAttributeSelector(String(id))}\"]`;\n}\nexport function getGridRowElement(root, id) {\n  return root.querySelector(getGridRowElementSelector(id));\n}\nexport function getGridCellElement(root, _ref) {\n  let {\n    id,\n    field\n  } = _ref;\n  const rowSelector = getGridRowElementSelector(id);\n  const cellSelector = `.${gridClasses.cell}[data-field=\"${escapeOperandAttributeSelector(field)}\"]`;\n  const selector = `${rowSelector} ${cellSelector}`;\n  return root.querySelector(selector);\n}\n\n// https://www.abeautifulsite.net/posts/finding-the-active-element-in-a-shadow-root/\nexport const getActiveElement = function () {\n  let root = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n  const activeEl = root.activeElement;\n  if (!activeEl) {\n    return null;\n  }\n  if (activeEl.shadowRoot) {\n    return getActiveElement(activeEl.shadowRoot);\n  }\n  return activeEl;\n};","map":{"version":3,"names":["gridClasses","isOverflown","element","scrollHeight","clientHeight","scrollWidth","clientWidth","findParentElementFromClassName","elem","className","closest","getRowEl","cell","row","isGridCellRoot","classList","contains","isGridHeaderCellRoot","columnHeader","escapeOperandAttributeSelector","operand","replace","getGridColumnHeaderElement","root","field","querySelector","getGridRowElementSelector","id","String","getGridRowElement","getGridCellElement","rowSelector","cellSelector","selector","getActiveElement","document","activeEl","activeElement","shadowRoot"],"sources":["C:/Users/Armi/source/repos/FullStack/contacts-app/node_modules/@mui/x-data-grid/utils/domUtils.js"],"sourcesContent":["import { gridClasses } from '../constants/gridClasses';\nexport function isOverflown(element) {\n  return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\n}\nexport function findParentElementFromClassName(elem, className) {\n  return elem.closest(`.${className}`);\n}\nexport function getRowEl(cell) {\n  if (!cell) {\n    return null;\n  }\n  return findParentElementFromClassName(cell, gridClasses.row);\n}\n\n// TODO remove\nexport function isGridCellRoot(elem) {\n  return elem != null && elem.classList.contains(gridClasses.cell);\n}\nexport function isGridHeaderCellRoot(elem) {\n  return elem != null && elem.classList.contains(gridClasses.columnHeader);\n}\nfunction escapeOperandAttributeSelector(operand) {\n  return operand.replace(/[\"\\\\]/g, '\\\\$&');\n}\nexport function getGridColumnHeaderElement(root, field) {\n  return root.querySelector(`[role=\"columnheader\"][data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nfunction getGridRowElementSelector(id) {\n  return `.${gridClasses.row}[data-id=\"${escapeOperandAttributeSelector(String(id))}\"]`;\n}\nexport function getGridRowElement(root, id) {\n  return root.querySelector(getGridRowElementSelector(id));\n}\nexport function getGridCellElement(root, {\n  id,\n  field\n}) {\n  const rowSelector = getGridRowElementSelector(id);\n  const cellSelector = `.${gridClasses.cell}[data-field=\"${escapeOperandAttributeSelector(field)}\"]`;\n  const selector = `${rowSelector} ${cellSelector}`;\n  return root.querySelector(selector);\n}\n\n// https://www.abeautifulsite.net/posts/finding-the-active-element-in-a-shadow-root/\nexport const getActiveElement = (root = document) => {\n  const activeEl = root.activeElement;\n  if (!activeEl) {\n    return null;\n  }\n  if (activeEl.shadowRoot) {\n    return getActiveElement(activeEl.shadowRoot);\n  }\n  return activeEl;\n};"],"mappings":"AAAA,SAASA,WAAW,QAAQ,0BAA0B;AACtD,OAAO,SAASC,WAAW,CAACC,OAAO,EAAE;EACnC,OAAOA,OAAO,CAACC,YAAY,GAAGD,OAAO,CAACE,YAAY,IAAIF,OAAO,CAACG,WAAW,GAAGH,OAAO,CAACI,WAAW;AACjG;AACA,OAAO,SAASC,8BAA8B,CAACC,IAAI,EAAEC,SAAS,EAAE;EAC9D,OAAOD,IAAI,CAACE,OAAO,CAAE,IAAGD,SAAU,EAAC,CAAC;AACtC;AACA,OAAO,SAASE,QAAQ,CAACC,IAAI,EAAE;EAC7B,IAAI,CAACA,IAAI,EAAE;IACT,OAAO,IAAI;EACb;EACA,OAAOL,8BAA8B,CAACK,IAAI,EAAEZ,WAAW,CAACa,GAAG,CAAC;AAC9D;;AAEA;AACA,OAAO,SAASC,cAAc,CAACN,IAAI,EAAE;EACnC,OAAOA,IAAI,IAAI,IAAI,IAAIA,IAAI,CAACO,SAAS,CAACC,QAAQ,CAAChB,WAAW,CAACY,IAAI,CAAC;AAClE;AACA,OAAO,SAASK,oBAAoB,CAACT,IAAI,EAAE;EACzC,OAAOA,IAAI,IAAI,IAAI,IAAIA,IAAI,CAACO,SAAS,CAACC,QAAQ,CAAChB,WAAW,CAACkB,YAAY,CAAC;AAC1E;AACA,SAASC,8BAA8B,CAACC,OAAO,EAAE;EAC/C,OAAOA,OAAO,CAACC,OAAO,CAAC,QAAQ,EAAE,MAAM,CAAC;AAC1C;AACA,OAAO,SAASC,0BAA0B,CAACC,IAAI,EAAEC,KAAK,EAAE;EACtD,OAAOD,IAAI,CAACE,aAAa,CAAE,qCAAoCN,8BAA8B,CAACK,KAAK,CAAE,IAAG,CAAC;AAC3G;AACA,SAASE,yBAAyB,CAACC,EAAE,EAAE;EACrC,OAAQ,IAAG3B,WAAW,CAACa,GAAI,aAAYM,8BAA8B,CAACS,MAAM,CAACD,EAAE,CAAC,CAAE,IAAG;AACvF;AACA,OAAO,SAASE,iBAAiB,CAACN,IAAI,EAAEI,EAAE,EAAE;EAC1C,OAAOJ,IAAI,CAACE,aAAa,CAACC,yBAAyB,CAACC,EAAE,CAAC,CAAC;AAC1D;AACA,OAAO,SAASG,kBAAkB,CAACP,IAAI,QAGpC;EAAA,IAHsC;IACvCI,EAAE;IACFH;EACF,CAAC;EACC,MAAMO,WAAW,GAAGL,yBAAyB,CAACC,EAAE,CAAC;EACjD,MAAMK,YAAY,GAAI,IAAGhC,WAAW,CAACY,IAAK,gBAAeO,8BAA8B,CAACK,KAAK,CAAE,IAAG;EAClG,MAAMS,QAAQ,GAAI,GAAEF,WAAY,IAAGC,YAAa,EAAC;EACjD,OAAOT,IAAI,CAACE,aAAa,CAACQ,QAAQ,CAAC;AACrC;;AAEA;AACA,OAAO,MAAMC,gBAAgB,GAAG,YAAqB;EAAA,IAApBX,IAAI,uEAAGY,QAAQ;EAC9C,MAAMC,QAAQ,GAAGb,IAAI,CAACc,aAAa;EACnC,IAAI,CAACD,QAAQ,EAAE;IACb,OAAO,IAAI;EACb;EACA,IAAIA,QAAQ,CAACE,UAAU,EAAE;IACvB,OAAOJ,gBAAgB,CAACE,QAAQ,CAACE,UAAU,CAAC;EAC9C;EACA,OAAOF,QAAQ;AACjB,CAAC"},"metadata":{},"sourceType":"module"}