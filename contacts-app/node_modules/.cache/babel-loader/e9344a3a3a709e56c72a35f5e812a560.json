{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, unstable_capitalize as capitalize, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { GridRootStyles } from './GridRootStyles';\nimport { gridVisibleColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { gridDensityValueSelector } from '../../hooks/features/density/densitySelector';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { gridPinnedRowsCountSelector, gridRowCountSelector } from '../../hooks/features/rows/gridRowsSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    autoHeight,\n    density,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', autoHeight && 'autoHeight', `root--density${capitalize(density)}`, 'withBorderColor']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRoot = /*#__PURE__*/React.forwardRef(function GridRoot(props, ref) {\n  const rootProps = useGridRootProps();\n  const {\n      children,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const densityValue = useGridSelector(apiRef, gridDensityValueSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const rootContainerRef = React.useRef(null);\n  const handleRef = useForkRef(rootContainerRef, ref);\n  const pinnedRowsCount = useGridSelector(apiRef, gridPinnedRowsCountSelector);\n  const ownerState = _extends({}, rootProps, {\n    density: densityValue\n  });\n  const classes = useUtilityClasses(ownerState);\n  apiRef.current.register('public', {\n    rootElementRef: rootContainerRef\n  });\n\n  // Our implementation of <NoSsr />\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    setMountedState(true);\n  }, []);\n  if (!mountedState) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridRootStyles, _extends({\n    ref: handleRef,\n    className: clsx(className, classes.root),\n    ownerState: ownerState,\n    role: \"grid\",\n    \"aria-colcount\": visibleColumns.length,\n    \"aria-rowcount\": headerGroupingMaxDepth + 1 + pinnedRowsCount + totalRowCount,\n    \"aria-multiselectable\": !rootProps.disableMultipleRowSelection\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridRoot };","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","clsx","unstable_useForkRef","useForkRef","unstable_useEnhancedEffect","useEnhancedEffect","unstable_capitalize","capitalize","unstable_composeClasses","composeClasses","GridRootStyles","gridVisibleColumnDefinitionsSelector","useGridSelector","useGridPrivateApiContext","useGridRootProps","getDataGridUtilityClass","gridDensityValueSelector","gridColumnGroupsHeaderMaxDepthSelector","gridPinnedRowsCountSelector","gridRowCountSelector","jsx","_jsx","useUtilityClasses","ownerState","autoHeight","density","classes","slots","root","GridRoot","forwardRef","props","ref","rootProps","children","className","other","apiRef","visibleColumns","totalRowCount","densityValue","headerGroupingMaxDepth","rootContainerRef","useRef","handleRef","pinnedRowsCount","current","register","rootElementRef","mountedState","setMountedState","useState","role","length","disableMultipleRowSelection","process","env","NODE_ENV","propTypes","sx","oneOfType","arrayOf","func","object","bool"],"sources":["C:/Users/Armi/source/repos/FullStack/contacts-app/node_modules/@mui/x-data-grid/components/containers/GridRoot.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, unstable_capitalize as capitalize, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { GridRootStyles } from './GridRootStyles';\nimport { gridVisibleColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { gridDensityValueSelector } from '../../hooks/features/density/densitySelector';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { gridPinnedRowsCountSelector, gridRowCountSelector } from '../../hooks/features/rows/gridRowsSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    autoHeight,\n    density,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', autoHeight && 'autoHeight', `root--density${capitalize(density)}`, 'withBorderColor']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRoot = /*#__PURE__*/React.forwardRef(function GridRoot(props, ref) {\n  const rootProps = useGridRootProps();\n  const {\n      children,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const densityValue = useGridSelector(apiRef, gridDensityValueSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const rootContainerRef = React.useRef(null);\n  const handleRef = useForkRef(rootContainerRef, ref);\n  const pinnedRowsCount = useGridSelector(apiRef, gridPinnedRowsCountSelector);\n  const ownerState = _extends({}, rootProps, {\n    density: densityValue\n  });\n  const classes = useUtilityClasses(ownerState);\n  apiRef.current.register('public', {\n    rootElementRef: rootContainerRef\n  });\n\n  // Our implementation of <NoSsr />\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    setMountedState(true);\n  }, []);\n  if (!mountedState) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridRootStyles, _extends({\n    ref: handleRef,\n    className: clsx(className, classes.root),\n    ownerState: ownerState,\n    role: \"grid\",\n    \"aria-colcount\": visibleColumns.length,\n    \"aria-rowcount\": headerGroupingMaxDepth + 1 + pinnedRowsCount + totalRowCount,\n    \"aria-multiselectable\": !rootProps.disableMultipleRowSelection\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridRoot };"],"mappings":"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"},"metadata":{},"sourceType":"module"}