{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { styled, useTheme } from '@mui/system';\nimport { defaultMemoize } from 'reselect';\nimport { useGridPrivateApiContext } from '../../utils/useGridPrivateApiContext';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { GridColumnHeaderItem } from '../../../components/columnHeaders/GridColumnHeaderItem';\nimport { getFirstColumnIndexToRender, getTotalHeaderHeight } from '../columns/gridColumnsUtils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { areRenderContextsEqual, getRenderableIndexes } from '../virtualization/useGridVirtualScroller';\nimport { GridColumnGroupHeader } from '../../../components/columnHeaders/GridColumnGroupHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridColumnHeaderRow = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderRow',\n  overridesResolver: (props, styles) => styles.columnHeaderRow\n})(() => ({\n  display: 'flex'\n}));\nfunction isUIEvent(event) {\n  return !!event.target;\n}\nexport const useGridColumnHeaders = props => {\n  const {\n    innerRef: innerRefProp,\n    minColumnIndex = 0,\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnPositions,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    densityFactor,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  } = props;\n  const theme = useTheme();\n  const [dragCol, setDragCol] = React.useState('');\n  const [resizeCol, setResizeCol] = React.useState('');\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const innerRef = React.useRef(null);\n  const handleInnerRef = useForkRef(innerRefProp, innerRef);\n  const [renderContext, setRenderContextRaw] = React.useState(null);\n  const prevRenderContext = React.useRef(renderContext);\n  const prevScrollLeft = React.useRef(0);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const totalHeaderHeight = getTotalHeaderHeight(apiRef, rootProps.columnHeaderHeight);\n  const headerHeight = Math.floor(rootProps.columnHeaderHeight * densityFactor);\n  const setRenderContext = React.useCallback(nextRenderContext => {\n    if (renderContext && nextRenderContext && areRenderContextsEqual(renderContext, nextRenderContext)) {\n      return;\n    }\n    setRenderContextRaw(nextRenderContext);\n  }, [renderContext]);\n  React.useEffect(() => {\n    apiRef.current.columnHeadersContainerElementRef.current.scrollLeft = 0;\n  }, [apiRef]);\n\n  // memoize `getFirstColumnIndexToRender`, since it's called on scroll\n  const getFirstColumnIndexToRenderRef = React.useRef(defaultMemoize(getFirstColumnIndexToRender, {\n    equalityCheck: (a, b) => ['firstColumnIndex', 'minColumnIndex', 'columnBuffer'].every(key => a[key] === b[key])\n  }));\n  const updateInnerPosition = React.useCallback(nextRenderContext => {\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    const firstColumnToRender = getFirstColumnIndexToRenderRef.current({\n      firstColumnIndex: nextRenderContext.firstColumnIndex,\n      minColumnIndex,\n      columnBuffer: rootProps.columnBuffer,\n      firstRowToRender,\n      lastRowToRender,\n      apiRef,\n      visibleRows: currentPage.rows\n    });\n    const direction = theme.direction === 'ltr' ? 1 : -1;\n    const offset = firstColumnToRender > 0 ? prevScrollLeft.current - direction * columnPositions[firstColumnToRender] : prevScrollLeft.current;\n    innerRef.current.style.transform = `translate3d(${-offset}px, 0px, 0px)`;\n  }, [columnPositions, minColumnIndex, rootProps.columnBuffer, apiRef, currentPage.rows, rootProps.rowBuffer, theme.direction]);\n  React.useLayoutEffect(() => {\n    if (renderContext) {\n      updateInnerPosition(renderContext);\n    }\n  }, [renderContext, updateInnerPosition]);\n  const handleScroll = React.useCallback((_ref, event) => {\n    let {\n      left,\n      renderContext: nextRenderContext = null\n    } = _ref;\n    var _prevRenderContext$cu, _prevRenderContext$cu2;\n    if (!innerRef.current) {\n      return;\n    }\n\n    // Ignore vertical scroll.\n    // Excepts the first event which sets the previous render context.\n    if (prevScrollLeft.current === left && ((_prevRenderContext$cu = prevRenderContext.current) == null ? void 0 : _prevRenderContext$cu.firstColumnIndex) === (nextRenderContext == null ? void 0 : nextRenderContext.firstColumnIndex) && ((_prevRenderContext$cu2 = prevRenderContext.current) == null ? void 0 : _prevRenderContext$cu2.lastColumnIndex) === (nextRenderContext == null ? void 0 : nextRenderContext.lastColumnIndex)) {\n      return;\n    }\n    prevScrollLeft.current = left;\n\n    // We can only update the position when we guarantee that the render context has been\n    // rendered. This is achieved using ReactDOM.flushSync or when the context doesn't change.\n    let canUpdateInnerPosition = false;\n    if (nextRenderContext !== prevRenderContext.current || !prevRenderContext.current) {\n      // ReactDOM.flushSync cannot be called on `scroll` events fired inside effects\n      if (isUIEvent(event)) {\n        // To prevent flickering, the inner position can only be updated after the new context has\n        // been rendered. ReactDOM.flushSync ensures that the state changes will happen before\n        // updating the position.\n        ReactDOM.flushSync(() => {\n          setRenderContext(nextRenderContext);\n        });\n        canUpdateInnerPosition = true;\n      } else {\n        setRenderContext(nextRenderContext);\n      }\n      prevRenderContext.current = nextRenderContext;\n    } else {\n      canUpdateInnerPosition = true;\n    }\n\n    // Pass directly the render context to avoid waiting for the next render\n    if (nextRenderContext && canUpdateInnerPosition) {\n      updateInnerPosition(nextRenderContext);\n    }\n  }, [updateInnerPosition, setRenderContext]);\n  const handleColumnResizeStart = React.useCallback(params => setResizeCol(params.field), []);\n  const handleColumnResizeStop = React.useCallback(() => setResizeCol(''), []);\n  const handleColumnReorderStart = React.useCallback(params => setDragCol(params.field), []);\n  const handleColumnReorderStop = React.useCallback(() => setDragCol(''), []);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleColumnResizeStart);\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleColumnResizeStop);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnReorderStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnReorderStop);\n  useGridApiEventHandler(apiRef, 'scrollPositionChange', handleScroll);\n\n  // Helper for computation common between getColumnHeaders and getColumnGroupHeaders\n  const getColumnsToRender = params => {\n    const {\n      renderContext: nextRenderContext = renderContext,\n      minFirstColumn = minColumnIndex,\n      maxLastColumn = visibleColumns.length\n    } = params || {};\n    if (!nextRenderContext) {\n      return null;\n    }\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    const firstColumnToRender = getFirstColumnIndexToRenderRef.current({\n      firstColumnIndex: nextRenderContext.firstColumnIndex,\n      minColumnIndex: minFirstColumn,\n      columnBuffer: rootProps.columnBuffer,\n      apiRef,\n      firstRowToRender,\n      lastRowToRender,\n      visibleRows: currentPage.rows\n    });\n    const lastColumnToRender = Math.min(nextRenderContext.lastColumnIndex + rootProps.columnBuffer, maxLastColumn);\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    return {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender,\n      minFirstColumn,\n      maxLastColumn\n    };\n  };\n  const getColumnHeaders = function (params) {\n    let other = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const columnsToRender = getColumnsToRender(params);\n    if (columnsToRender == null) {\n      return null;\n    }\n    const {\n      renderedColumns,\n      firstColumnToRender\n    } = columnsToRender;\n    const columns = [];\n    for (let i = 0; i < renderedColumns.length; i += 1) {\n      const colDef = renderedColumns[i];\n      const columnIndex = firstColumnToRender + i;\n      const isFirstColumn = columnIndex === 0;\n      const tabIndex = columnHeaderTabIndexState !== null && columnHeaderTabIndexState.field === colDef.field || isFirstColumn && !hasOtherElementInTabSequence ? 0 : -1;\n      const hasFocus = columnHeaderFocus !== null && columnHeaderFocus.field === colDef.field;\n      const open = columnMenuState.open && columnMenuState.field === colDef.field;\n      columns.push( /*#__PURE__*/_jsx(GridColumnHeaderItem, _extends({}, sortColumnLookup[colDef.field], {\n        columnMenuOpen: open,\n        filterItemsCounter: filterColumnLookup[colDef.field] && filterColumnLookup[colDef.field].length,\n        headerHeight: headerHeight,\n        isDragging: colDef.field === dragCol,\n        colDef: colDef,\n        colIndex: columnIndex,\n        isResizing: resizeCol === colDef.field,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex\n      }, other), colDef.field));\n    }\n    return /*#__PURE__*/_jsx(GridColumnHeaderRow, {\n      role: \"row\",\n      \"aria-rowindex\": headerGroupingMaxDepth + 1,\n      ownerState: rootProps,\n      children: columns\n    });\n  };\n  const getColumnGroupHeaders = params => {\n    if (headerGroupingMaxDepth === 0) {\n      return null;\n    }\n    const columnsToRender = getColumnsToRender(params);\n    if (columnsToRender == null || columnsToRender.renderedColumns.length === 0) {\n      return null;\n    }\n    const {\n      firstColumnToRender,\n      lastColumnToRender\n    } = columnsToRender;\n    const columns = [];\n    const headerToRender = [];\n    for (let depth = 0; depth < headerGroupingMaxDepth; depth += 1) {\n      var _apiRef$current$unsta, _apiRef$current$unsta2;\n      const rowStructure = columnGroupsHeaderStructure[depth];\n      const firstColumnFieldToRender = visibleColumns[firstColumnToRender].field;\n      const firstGroupToRender = (_apiRef$current$unsta = apiRef.current.unstable_getColumnGroupPath(firstColumnFieldToRender)[depth]) != null ? _apiRef$current$unsta : null;\n      const firstGroupIndex = rowStructure.findIndex(_ref2 => {\n        let {\n          groupId,\n          columnFields\n        } = _ref2;\n        return groupId === firstGroupToRender && columnFields.includes(firstColumnFieldToRender);\n      });\n      const lastColumnFieldToRender = visibleColumns[lastColumnToRender - 1].field;\n      const lastGroupToRender = (_apiRef$current$unsta2 = apiRef.current.unstable_getColumnGroupPath(lastColumnFieldToRender)[depth]) != null ? _apiRef$current$unsta2 : null;\n      const lastGroupIndex = rowStructure.findIndex(_ref3 => {\n        let {\n          groupId,\n          columnFields\n        } = _ref3;\n        return groupId === lastGroupToRender && columnFields.includes(lastColumnFieldToRender);\n      });\n      const visibleColumnGroupHeader = rowStructure.slice(firstGroupIndex, lastGroupIndex + 1).map(groupStructure => {\n        return _extends({}, groupStructure, {\n          columnFields: groupStructure.columnFields.filter(field => columnVisibility[field] !== false)\n        });\n      }).filter(groupStructure => groupStructure.columnFields.length > 0);\n      const firstVisibleColumnIndex = visibleColumnGroupHeader[0].columnFields.indexOf(firstColumnFieldToRender);\n      const hiddenGroupColumns = visibleColumnGroupHeader[0].columnFields.slice(0, firstVisibleColumnIndex);\n      const leftOverflow = hiddenGroupColumns.reduce((acc, field) => {\n        var _column$computedWidth;\n        const column = apiRef.current.getColumn(field);\n        return acc + ((_column$computedWidth = column.computedWidth) != null ? _column$computedWidth : 0);\n      }, 0);\n      let columnIndex = firstColumnToRender;\n      const elements = visibleColumnGroupHeader.map(_ref4 => {\n        let {\n          groupId,\n          columnFields\n        } = _ref4;\n        const hasFocus = columnGroupHeaderFocus !== null && columnGroupHeaderFocus.depth === depth && columnFields.includes(columnGroupHeaderFocus.field);\n        const tabIndex = columnGroupHeaderTabIndexState !== null && columnGroupHeaderTabIndexState.depth === depth && columnFields.includes(columnGroupHeaderTabIndexState.field) ? 0 : -1;\n        const headerInfo = {\n          groupId,\n          width: columnFields.reduce((acc, field) => acc + apiRef.current.getColumn(field).computedWidth, 0),\n          fields: columnFields,\n          colIndex: columnIndex,\n          hasFocus,\n          tabIndex\n        };\n        columnIndex += columnFields.length;\n        return headerInfo;\n      });\n      headerToRender.push({\n        leftOverflow,\n        elements\n      });\n    }\n    headerToRender.forEach((depthInfo, depthIndex) => {\n      columns.push( /*#__PURE__*/_jsx(GridColumnHeaderRow, {\n        style: {\n          height: `${headerHeight}px`,\n          transform: `translateX(-${depthInfo.leftOverflow}px)`\n        },\n        role: \"row\",\n        \"aria-rowindex\": depthIndex + 1,\n        ownerState: rootProps,\n        children: depthInfo.elements.map((_ref5, groupIndex) => {\n          let {\n            groupId,\n            width,\n            fields,\n            colIndex,\n            hasFocus,\n            tabIndex\n          } = _ref5;\n          return /*#__PURE__*/_jsx(GridColumnGroupHeader, {\n            groupId: groupId,\n            width: width,\n            fields: fields,\n            colIndex: colIndex,\n            depth: depthIndex,\n            isLastColumn: colIndex === visibleColumns.length - fields.length,\n            maxDepth: headerToRender.length,\n            height: headerHeight,\n            hasFocus: hasFocus,\n            tabIndex: tabIndex\n          }, groupIndex);\n        })\n      }, depthIndex));\n    });\n    return columns;\n  };\n  const rootStyle = {\n    minHeight: totalHeaderHeight,\n    maxHeight: totalHeaderHeight,\n    lineHeight: `${headerHeight}px`\n  };\n  return {\n    renderContext,\n    getColumnHeaders,\n    getColumnsToRender,\n    getColumnGroupHeaders,\n    isDragging: !!dragCol,\n    getRootProps: function () {\n      let other = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _extends({\n        style: rootStyle\n      }, other);\n    },\n    getInnerProps: () => ({\n      ref: handleInnerRef,\n      role: 'rowgroup'\n    }),\n    headerHeight\n  };\n};","map":{"version":3,"names":["_extends","React","ReactDOM","unstable_useForkRef","useForkRef","styled","useTheme","defaultMemoize","useGridPrivateApiContext","useGridRootProps","useGridApiEventHandler","GridColumnHeaderItem","getFirstColumnIndexToRender","getTotalHeaderHeight","useGridVisibleRows","areRenderContextsEqual","getRenderableIndexes","GridColumnGroupHeader","jsx","_jsx","GridColumnHeaderRow","name","slot","overridesResolver","props","styles","columnHeaderRow","display","isUIEvent","event","target","useGridColumnHeaders","innerRef","innerRefProp","minColumnIndex","visibleColumns","sortColumnLookup","filterColumnLookup","columnPositions","columnHeaderTabIndexState","columnGroupHeaderTabIndexState","columnHeaderFocus","columnGroupHeaderFocus","densityFactor","headerGroupingMaxDepth","columnMenuState","columnVisibility","columnGroupsHeaderStructure","hasOtherElementInTabSequence","theme","dragCol","setDragCol","useState","resizeCol","setResizeCol","apiRef","rootProps","useRef","handleInnerRef","renderContext","setRenderContextRaw","prevRenderContext","prevScrollLeft","currentPage","totalHeaderHeight","columnHeaderHeight","headerHeight","Math","floor","setRenderContext","useCallback","nextRenderContext","useEffect","current","columnHeadersContainerElementRef","scrollLeft","getFirstColumnIndexToRenderRef","equalityCheck","a","b","every","key","updateInnerPosition","firstRowToRender","lastRowToRender","firstIndex","firstRowIndex","lastIndex","lastRowIndex","minFirstIndex","maxLastIndex","rows","length","buffer","rowBuffer","firstColumnToRender","firstColumnIndex","columnBuffer","visibleRows","direction","offset","style","transform","useLayoutEffect","handleScroll","left","_prevRenderContext$cu","_prevRenderContext$cu2","lastColumnIndex","canUpdateInnerPosition","flushSync","handleColumnResizeStart","params","field","handleColumnResizeStop","handleColumnReorderStart","handleColumnReorderStop","getColumnsToRender","minFirstColumn","maxLastColumn","lastColumnToRender","min","renderedColumns","slice","getColumnHeaders","other","columnsToRender","columns","i","colDef","columnIndex","isFirstColumn","tabIndex","hasFocus","open","push","columnMenuOpen","filterItemsCounter","isDragging","colIndex","isResizing","role","ownerState","children","getColumnGroupHeaders","headerToRender","depth","_apiRef$current$unsta","_apiRef$current$unsta2","rowStructure","firstColumnFieldToRender","firstGroupToRender","unstable_getColumnGroupPath","firstGroupIndex","findIndex","groupId","columnFields","includes","lastColumnFieldToRender","lastGroupToRender","lastGroupIndex","visibleColumnGroupHeader","map","groupStructure","filter","firstVisibleColumnIndex","indexOf","hiddenGroupColumns","leftOverflow","reduce","acc","_column$computedWidth","column","getColumn","computedWidth","elements","headerInfo","width","fields","forEach","depthInfo","depthIndex","height","groupIndex","isLastColumn","maxDepth","rootStyle","minHeight","maxHeight","lineHeight","getRootProps","getInnerProps","ref"],"sources":["C:/Users/Armi/source/repos/FullStack/contacts-app/node_modules/@mui/x-data-grid/hooks/features/columnHeaders/useGridColumnHeaders.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { styled, useTheme } from '@mui/system';\nimport { defaultMemoize } from 'reselect';\nimport { useGridPrivateApiContext } from '../../utils/useGridPrivateApiContext';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { GridColumnHeaderItem } from '../../../components/columnHeaders/GridColumnHeaderItem';\nimport { getFirstColumnIndexToRender, getTotalHeaderHeight } from '../columns/gridColumnsUtils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { areRenderContextsEqual, getRenderableIndexes } from '../virtualization/useGridVirtualScroller';\nimport { GridColumnGroupHeader } from '../../../components/columnHeaders/GridColumnGroupHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridColumnHeaderRow = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderRow',\n  overridesResolver: (props, styles) => styles.columnHeaderRow\n})(() => ({\n  display: 'flex'\n}));\nfunction isUIEvent(event) {\n  return !!event.target;\n}\nexport const useGridColumnHeaders = props => {\n  const {\n    innerRef: innerRefProp,\n    minColumnIndex = 0,\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnPositions,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    densityFactor,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  } = props;\n  const theme = useTheme();\n  const [dragCol, setDragCol] = React.useState('');\n  const [resizeCol, setResizeCol] = React.useState('');\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const innerRef = React.useRef(null);\n  const handleInnerRef = useForkRef(innerRefProp, innerRef);\n  const [renderContext, setRenderContextRaw] = React.useState(null);\n  const prevRenderContext = React.useRef(renderContext);\n  const prevScrollLeft = React.useRef(0);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const totalHeaderHeight = getTotalHeaderHeight(apiRef, rootProps.columnHeaderHeight);\n  const headerHeight = Math.floor(rootProps.columnHeaderHeight * densityFactor);\n  const setRenderContext = React.useCallback(nextRenderContext => {\n    if (renderContext && nextRenderContext && areRenderContextsEqual(renderContext, nextRenderContext)) {\n      return;\n    }\n    setRenderContextRaw(nextRenderContext);\n  }, [renderContext]);\n  React.useEffect(() => {\n    apiRef.current.columnHeadersContainerElementRef.current.scrollLeft = 0;\n  }, [apiRef]);\n\n  // memoize `getFirstColumnIndexToRender`, since it's called on scroll\n  const getFirstColumnIndexToRenderRef = React.useRef(defaultMemoize(getFirstColumnIndexToRender, {\n    equalityCheck: (a, b) => ['firstColumnIndex', 'minColumnIndex', 'columnBuffer'].every(key => a[key] === b[key])\n  }));\n  const updateInnerPosition = React.useCallback(nextRenderContext => {\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    const firstColumnToRender = getFirstColumnIndexToRenderRef.current({\n      firstColumnIndex: nextRenderContext.firstColumnIndex,\n      minColumnIndex,\n      columnBuffer: rootProps.columnBuffer,\n      firstRowToRender,\n      lastRowToRender,\n      apiRef,\n      visibleRows: currentPage.rows\n    });\n    const direction = theme.direction === 'ltr' ? 1 : -1;\n    const offset = firstColumnToRender > 0 ? prevScrollLeft.current - direction * columnPositions[firstColumnToRender] : prevScrollLeft.current;\n    innerRef.current.style.transform = `translate3d(${-offset}px, 0px, 0px)`;\n  }, [columnPositions, minColumnIndex, rootProps.columnBuffer, apiRef, currentPage.rows, rootProps.rowBuffer, theme.direction]);\n  React.useLayoutEffect(() => {\n    if (renderContext) {\n      updateInnerPosition(renderContext);\n    }\n  }, [renderContext, updateInnerPosition]);\n  const handleScroll = React.useCallback(({\n    left,\n    renderContext: nextRenderContext = null\n  }, event) => {\n    var _prevRenderContext$cu, _prevRenderContext$cu2;\n    if (!innerRef.current) {\n      return;\n    }\n\n    // Ignore vertical scroll.\n    // Excepts the first event which sets the previous render context.\n    if (prevScrollLeft.current === left && ((_prevRenderContext$cu = prevRenderContext.current) == null ? void 0 : _prevRenderContext$cu.firstColumnIndex) === (nextRenderContext == null ? void 0 : nextRenderContext.firstColumnIndex) && ((_prevRenderContext$cu2 = prevRenderContext.current) == null ? void 0 : _prevRenderContext$cu2.lastColumnIndex) === (nextRenderContext == null ? void 0 : nextRenderContext.lastColumnIndex)) {\n      return;\n    }\n    prevScrollLeft.current = left;\n\n    // We can only update the position when we guarantee that the render context has been\n    // rendered. This is achieved using ReactDOM.flushSync or when the context doesn't change.\n    let canUpdateInnerPosition = false;\n    if (nextRenderContext !== prevRenderContext.current || !prevRenderContext.current) {\n      // ReactDOM.flushSync cannot be called on `scroll` events fired inside effects\n      if (isUIEvent(event)) {\n        // To prevent flickering, the inner position can only be updated after the new context has\n        // been rendered. ReactDOM.flushSync ensures that the state changes will happen before\n        // updating the position.\n        ReactDOM.flushSync(() => {\n          setRenderContext(nextRenderContext);\n        });\n        canUpdateInnerPosition = true;\n      } else {\n        setRenderContext(nextRenderContext);\n      }\n      prevRenderContext.current = nextRenderContext;\n    } else {\n      canUpdateInnerPosition = true;\n    }\n\n    // Pass directly the render context to avoid waiting for the next render\n    if (nextRenderContext && canUpdateInnerPosition) {\n      updateInnerPosition(nextRenderContext);\n    }\n  }, [updateInnerPosition, setRenderContext]);\n  const handleColumnResizeStart = React.useCallback(params => setResizeCol(params.field), []);\n  const handleColumnResizeStop = React.useCallback(() => setResizeCol(''), []);\n  const handleColumnReorderStart = React.useCallback(params => setDragCol(params.field), []);\n  const handleColumnReorderStop = React.useCallback(() => setDragCol(''), []);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleColumnResizeStart);\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleColumnResizeStop);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnReorderStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnReorderStop);\n  useGridApiEventHandler(apiRef, 'scrollPositionChange', handleScroll);\n\n  // Helper for computation common between getColumnHeaders and getColumnGroupHeaders\n  const getColumnsToRender = params => {\n    const {\n      renderContext: nextRenderContext = renderContext,\n      minFirstColumn = minColumnIndex,\n      maxLastColumn = visibleColumns.length\n    } = params || {};\n    if (!nextRenderContext) {\n      return null;\n    }\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    const firstColumnToRender = getFirstColumnIndexToRenderRef.current({\n      firstColumnIndex: nextRenderContext.firstColumnIndex,\n      minColumnIndex: minFirstColumn,\n      columnBuffer: rootProps.columnBuffer,\n      apiRef,\n      firstRowToRender,\n      lastRowToRender,\n      visibleRows: currentPage.rows\n    });\n    const lastColumnToRender = Math.min(nextRenderContext.lastColumnIndex + rootProps.columnBuffer, maxLastColumn);\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    return {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender,\n      minFirstColumn,\n      maxLastColumn\n    };\n  };\n  const getColumnHeaders = (params, other = {}) => {\n    const columnsToRender = getColumnsToRender(params);\n    if (columnsToRender == null) {\n      return null;\n    }\n    const {\n      renderedColumns,\n      firstColumnToRender\n    } = columnsToRender;\n    const columns = [];\n    for (let i = 0; i < renderedColumns.length; i += 1) {\n      const colDef = renderedColumns[i];\n      const columnIndex = firstColumnToRender + i;\n      const isFirstColumn = columnIndex === 0;\n      const tabIndex = columnHeaderTabIndexState !== null && columnHeaderTabIndexState.field === colDef.field || isFirstColumn && !hasOtherElementInTabSequence ? 0 : -1;\n      const hasFocus = columnHeaderFocus !== null && columnHeaderFocus.field === colDef.field;\n      const open = columnMenuState.open && columnMenuState.field === colDef.field;\n      columns.push( /*#__PURE__*/_jsx(GridColumnHeaderItem, _extends({}, sortColumnLookup[colDef.field], {\n        columnMenuOpen: open,\n        filterItemsCounter: filterColumnLookup[colDef.field] && filterColumnLookup[colDef.field].length,\n        headerHeight: headerHeight,\n        isDragging: colDef.field === dragCol,\n        colDef: colDef,\n        colIndex: columnIndex,\n        isResizing: resizeCol === colDef.field,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex\n      }, other), colDef.field));\n    }\n    return /*#__PURE__*/_jsx(GridColumnHeaderRow, {\n      role: \"row\",\n      \"aria-rowindex\": headerGroupingMaxDepth + 1,\n      ownerState: rootProps,\n      children: columns\n    });\n  };\n  const getColumnGroupHeaders = params => {\n    if (headerGroupingMaxDepth === 0) {\n      return null;\n    }\n    const columnsToRender = getColumnsToRender(params);\n    if (columnsToRender == null || columnsToRender.renderedColumns.length === 0) {\n      return null;\n    }\n    const {\n      firstColumnToRender,\n      lastColumnToRender\n    } = columnsToRender;\n    const columns = [];\n    const headerToRender = [];\n    for (let depth = 0; depth < headerGroupingMaxDepth; depth += 1) {\n      var _apiRef$current$unsta, _apiRef$current$unsta2;\n      const rowStructure = columnGroupsHeaderStructure[depth];\n      const firstColumnFieldToRender = visibleColumns[firstColumnToRender].field;\n      const firstGroupToRender = (_apiRef$current$unsta = apiRef.current.unstable_getColumnGroupPath(firstColumnFieldToRender)[depth]) != null ? _apiRef$current$unsta : null;\n      const firstGroupIndex = rowStructure.findIndex(({\n        groupId,\n        columnFields\n      }) => groupId === firstGroupToRender && columnFields.includes(firstColumnFieldToRender));\n      const lastColumnFieldToRender = visibleColumns[lastColumnToRender - 1].field;\n      const lastGroupToRender = (_apiRef$current$unsta2 = apiRef.current.unstable_getColumnGroupPath(lastColumnFieldToRender)[depth]) != null ? _apiRef$current$unsta2 : null;\n      const lastGroupIndex = rowStructure.findIndex(({\n        groupId,\n        columnFields\n      }) => groupId === lastGroupToRender && columnFields.includes(lastColumnFieldToRender));\n      const visibleColumnGroupHeader = rowStructure.slice(firstGroupIndex, lastGroupIndex + 1).map(groupStructure => {\n        return _extends({}, groupStructure, {\n          columnFields: groupStructure.columnFields.filter(field => columnVisibility[field] !== false)\n        });\n      }).filter(groupStructure => groupStructure.columnFields.length > 0);\n      const firstVisibleColumnIndex = visibleColumnGroupHeader[0].columnFields.indexOf(firstColumnFieldToRender);\n      const hiddenGroupColumns = visibleColumnGroupHeader[0].columnFields.slice(0, firstVisibleColumnIndex);\n      const leftOverflow = hiddenGroupColumns.reduce((acc, field) => {\n        var _column$computedWidth;\n        const column = apiRef.current.getColumn(field);\n        return acc + ((_column$computedWidth = column.computedWidth) != null ? _column$computedWidth : 0);\n      }, 0);\n      let columnIndex = firstColumnToRender;\n      const elements = visibleColumnGroupHeader.map(({\n        groupId,\n        columnFields\n      }) => {\n        const hasFocus = columnGroupHeaderFocus !== null && columnGroupHeaderFocus.depth === depth && columnFields.includes(columnGroupHeaderFocus.field);\n        const tabIndex = columnGroupHeaderTabIndexState !== null && columnGroupHeaderTabIndexState.depth === depth && columnFields.includes(columnGroupHeaderTabIndexState.field) ? 0 : -1;\n        const headerInfo = {\n          groupId,\n          width: columnFields.reduce((acc, field) => acc + apiRef.current.getColumn(field).computedWidth, 0),\n          fields: columnFields,\n          colIndex: columnIndex,\n          hasFocus,\n          tabIndex\n        };\n        columnIndex += columnFields.length;\n        return headerInfo;\n      });\n      headerToRender.push({\n        leftOverflow,\n        elements\n      });\n    }\n    headerToRender.forEach((depthInfo, depthIndex) => {\n      columns.push( /*#__PURE__*/_jsx(GridColumnHeaderRow, {\n        style: {\n          height: `${headerHeight}px`,\n          transform: `translateX(-${depthInfo.leftOverflow}px)`\n        },\n        role: \"row\",\n        \"aria-rowindex\": depthIndex + 1,\n        ownerState: rootProps,\n        children: depthInfo.elements.map(({\n          groupId,\n          width,\n          fields,\n          colIndex,\n          hasFocus,\n          tabIndex\n        }, groupIndex) => {\n          return /*#__PURE__*/_jsx(GridColumnGroupHeader, {\n            groupId: groupId,\n            width: width,\n            fields: fields,\n            colIndex: colIndex,\n            depth: depthIndex,\n            isLastColumn: colIndex === visibleColumns.length - fields.length,\n            maxDepth: headerToRender.length,\n            height: headerHeight,\n            hasFocus: hasFocus,\n            tabIndex: tabIndex\n          }, groupIndex);\n        })\n      }, depthIndex));\n    });\n    return columns;\n  };\n  const rootStyle = {\n    minHeight: totalHeaderHeight,\n    maxHeight: totalHeaderHeight,\n    lineHeight: `${headerHeight}px`\n  };\n  return {\n    renderContext,\n    getColumnHeaders,\n    getColumnsToRender,\n    getColumnGroupHeaders,\n    isDragging: !!dragCol,\n    getRootProps: (other = {}) => _extends({\n      style: rootStyle\n    }, other),\n    getInnerProps: () => ({\n      ref: handleInnerRef,\n      role: 'rowgroup'\n    }),\n    headerHeight\n  };\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}